@startuml Multisensor

abstract class IZStick {
    {abstract} network_is_awake() : bool
    {abstract} scan_for_nodes() : void
    {abstract} get_multisensor_node_ids() : list
}

abstract class ISensor {
    {abstract} network_is_awake() : bool
    {abstract} is_awake() : bool
    {abstract} get_values() : void
    {abstract} update_configuration() : int
}

abstract class IGateway {
    {abstract} write_values_to_file() : bool
    {abstract} read_configuration_from_file() : bool
}

class ZStick implements IZStick {
+ options : ZWaveOption obj
+ network : ZWaveNetwork obj 
+ sensor_list : list
+ logging : logging obj 

ZStick(z_stick_path)
+ network_is_awake() : bool
+ scan_for_nodes() : void
+ get_multisensor_node_ids() : list
}

class Gateway implements IGateway {
Gateway(node_id)
+ conf_filename : String
+ conf_params : dict
- _val_filepath : String
- _vals_filename : String
+ write_values_to_file(dict values) : bool
+ read_configuration_from_file() : bool
- _set_path_to_data() : void
}

package Kernel {
  class object<< System >>
}


class Multisensor {
  - _sensor : Sensor obj
  - _gateway : Gateway obj
  + sensor_values : dict
  + configurations : dict
    Multisensor(ISensor, IGateway)
  + is_awake() : bool
  + get_values() : void
  + update_configuration() : int
  + write_values_to_file() : bool
  + read_configuration() : bool

}

class OZWMultisensor implements ISensor {
  - _network : ZWaveNetwork obj
  - _zwnode : ZWaveNode obj
  - _node_id : int
  OZWMultisensor(node_id, ZWaveNetwork_obj)
  + ZWaveNode(_node_id, _network) : ZWaveNode obj
  + network_is_ready() : bool
  + is_awake() : bool
  + get_values() : dict
  + update_configuration() : int
  - _make_timestamp() : String(ISO8601)
  - _add_timestamp(dict values) : dict
}

package OpenZWave <<Folder>> {
  class ZWaveNode
  class ZWaveNetwork
  class ZWaveOption
}
Multisensor <|-- ZStick
Multisensor ..> ISensor
Multisensor ..> IGateway
OZWMultisensor <|-- ZWaveNode
ZStick <|-- ZWaveNetwork
ZStick <|-- ZWaveOption
OZWMultisensor <|-- ZStick
Gateway <|-- Kernel : Use


@enduml