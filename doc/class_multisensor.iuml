@startuml Multisensor

abstract class IOZWNetwork {
    {abstract} is_network_ready() : bool
    {abstract} is_awake() : bool
    {abstract} get_values() : void
    {abstract} update_configuration() : int
}

class Multisensor {
    + sensor_values : dict
    + configurations : dict

      Multisensor(IOZWNetwork)
    ~ Multisensor()
    + is_awake() : bool
    + get_values() : void
    + update_configuration() : int

}

class OZWNetwork implements IOZWNetwork {
  - _options : obj
  - _network : obj
  - _zwnode : obj
  - _node_id : int
  OZWNetwork(node_id)
  ~OZWNetwork()
  + ZWaveOption() : _options
  + ZWaveNetwork(_options): _network 
  + ZWaveNode(_node_id, _network) : _zwnode
  + is_network_ready() : bool
  + is_awake() : bool
  + get_values() : dict
  + update_configuration() : int
}

package Open-ZWave <<Folder>> {
  class ZWaveNode
  class ZWaveNetwork
  class ZWaveOption
}

Multisensor ..> IOZWNetwork
OZWNetwork <|-- ZWaveNetwork
OZWNetwork <|-- ZWaveNode
OZWNetwork <|-- ZWaveOption

@enduml